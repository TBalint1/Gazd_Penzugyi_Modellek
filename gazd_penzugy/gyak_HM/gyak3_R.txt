#feladat0
> x="dchcas";#neptun kód
> z=charToRaw(iconv(x, "latin1", "UTF-8"))
> for (i in 1:6) v=paste("0x",z,sep="")
> e=strtoi(v)
> ax=e[1];ay=e[2];az=e[3];av=e[4];ss=sum(strtoi(v))+24
> cat("ax=",ax,"\n")
ax= 100 
> cat("ay=",ay,"\n")
ay= 99 
> cat("az=",az,"\n")
az= 104 
> cat("av=",av,"\n")
av= 99 
> cat("ss=",ss,"\n")
ss= 638 
> ar=c( "FB","AAPL","AMZN","GOOG","NFLX","TSLA")
> ai=ss-6*floor(ss/6)
> ev=2022-(ss-10*floor(ss/10))
> cat("ev=",ev,"\n")
ev= 2014 
> cat("reszveny=",ar[ai+1],"\n")
reszveny= AMZN 
#feladat1
> install.packages("moments")
> library("moments")
> set.seed(ss)
> nx=900
> v=matrix(c(ax,abs(ax-ay),abs(ax-ay),ay),2)
> w=chol(v)
> z1=sqrt(-2*log(runif(nx)))*sin(runif(nx)*2*pi)
> z2=sqrt(-2*log(runif(nx)))*cos(runif(nx)*2*pi)
> zm=matrix(c(z1,z2),ncol=2)
> zn=10*zm%*%w
> install.packages("ggpubr")
> library("ggpubr")
Loading required package: ggplot2
Keep up to date with changes at https://www.tidyverse.org/blog/
> ggdensity(zn[,1],
+           main = "Sűrűségdiagram",
+           xlab = "Érték")
> ggdensity(zn[,2],
+           main = "Sűrűségdiagram",
+           xlab = "Érték")
> install.packages("car")
> library("car")
Loading required package: carData
> qqPlot(zn)
[1]  156 1163
#feladat3
> gbm_ciklus<-function(nsim=100, t=1000, mu=ax, sigma=1 + (ax+az)/(ax+ay+az), S0=100, dt=1./365){
+ gbm<-matrix(ncol=nsim, nrow=t)
+ for (simu in 1:nsim){
+ gbm[1,simu]<-50
+ for (day in 2:t){
+ epsilon<-rnorm(1)
+ dt=1/365
+ gbm[day,simu]<-gbm[(day-1),simu]*exp((mu-sigma*sigma/2)*dt+sigma*epsilon*sqrt(dt))
+ }
+ }
+ return(gbm)
+ }
> nsim<-1000
> nsim<-100
> t<-1000
> mu<-ax
> sigma<-1+(ax+az)/(ax+ay+az)
> S0<-100
> set.seed(ss+59)
> gbm<-gbm_ciklus(nsim,t,mu,sigma,S0)
> summary(gbm)
#feladat4-5
> details<-read.csv("C:/Users/au008907/Documents/AMZN.csv")
> zaro = details$Close
> zaro
  [1] 19.8985 19.8220 19.6815 19.9015 20.0960 20.0505 19.8830 19.5490 19.8770
 [10] 19.7935 19.7900 19.9805 20.3525 20.2270 19.9935 19.3800 19.3140 19.7215
 [19] 19.2100 20.1505 17.9345 17.3075 17.3975 17.3225 17.7295 18.0540 18.0435
 [28] 18.0895 17.4625 17.8600 17.8675 17.6825 17.3690 17.4900 17.3380 17.5890
 [37] 17.9160 17.9900 18.0065 18.1050 17.9890 18.1950 18.6185 18.6080 18.6030
 [46] 18.5265 18.4410 18.5320 18.5755 18.6870 18.7520 18.9385 18.6615 18.4485
 [55] 18.0310 17.5925 17.7355 17.1705 16.9235 16.9145 16.8185 17.1495 17.0980
 [64] 16.6810 16.1500 15.8880 16.3535 16.5905 15.8555 15.5865 15.7955 15.8040
 [73] 16.1840 16.2455 16.5435 16.4660 16.2290 16.8575 15.1915 14.8290 15.0190
 [82] 15.2065 15.3945 15.4005 15.5025 14.8690 14.6355 14.4160 14.6120 15.1430
 [91] 15.2320 14.8810 14.7595 14.8850 14.8380 15.0595 15.2505 15.2455 15.6120
[100] 15.5410 15.5080 15.6890 15.6275 15.4420 15.3595 15.3390 16.1785 16.4835
[109] 16.3750 16.6205 16.7600 16.2955 16.3135 16.3810 16.2810 16.7190 16.3500
[118] 16.2100 16.3620 16.2080 16.3720 16.2845 16.2285 16.2390 16.6195 16.6425
[127] 16.8745 16.6775 16.1905 16.4985 16.3960 17.3100 17.7660 17.7220 17.7950
[136] 17.6225 17.9330 17.9880 18.0420 17.9070 17.9305 16.2005 16.0205 16.0000
[145] 16.1255 15.6495 15.3530 15.6825 15.6160 15.6945 15.5725 15.8400 15.9165
[154] 15.9660 16.3140 16.6605 16.6815 16.7265 16.7565 16.7890 16.6455 16.5795
[163] 16.7010 17.0915 17.1590 17.0010 16.9520 17.1190 16.9500 17.2975 17.3190
[172] 17.1170 16.4875 16.5665 16.5260 16.5595 16.1945 16.3880 16.2000 16.2500
[181] 16.5660 16.2250 16.1815 16.4105 16.0965 16.1605 16.0910 16.1220 15.8730
[190] 15.9205 16.1370 16.1100 15.8490 16.1350 15.7685 15.5695 15.3225 15.4155
[199] 15.2985 15.1430 15.1820 15.3105 15.7665 15.6485 15.6590 14.3530 14.4985
[208] 14.7795 14.7060 14.9535 15.2730 15.2860 15.1405 14.8260 14.8320 14.9930
[217] 15.2555 15.6005 15.5755 15.8240 16.3910 16.1525 16.2465 16.3270 16.5270
[226] 16.6315 16.7820 16.7520 16.6785 16.9320 16.3000 16.3155 15.8250 15.8465
[235] 15.6315 15.3320 15.6250 15.2920 15.3680 15.3660 15.3035 14.7530 14.9440
[244] 14.8865 14.9950 15.3270 15.3145 15.1515 15.4545 15.6020 15.5150
> logreturn=c()
> for(i in 1:length(zaro)-1){
+   logreturn[i] = abs(log(zaro[i+1]/zaro[i]))
+ }
> chisq.test(logreturn)

        Chi-squared test for given probabilities

data:  logreturn
X-squared = 4.2944, df = 249, p-value = 1
> hist(logreturn, main = "Záró árak változása, Hisztogram")
> plot(logreturn)